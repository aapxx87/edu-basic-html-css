.el--1 {
  background-color: blueviolet;
}

.el--2 {
  background-color: orangered;
}

.el--3 {
  background-color: green;
  height: 150px;
}

.el--4 {
  background-color: goldenrod;
}

.el--5 {
  background-color: palevioletred;
}

.el--6 {
  background-color: steelblue;
}

.el--7 {
  background-color: yellow;
}

.el--8 {
  background-color: crimson;
}



.container {
  /* STARTER */
  font-family: sans-serif;
  background-color: #ddd;
  font-size: 40px;
  margin: 40px;

  /* FLEXBOX - 1-dimensional layout */
  /* In order to start use flex we need to set display property to flex. So we define a flex container. */
  /* all elements is placed side by side */
  /* all elements in parent container we call flex items. Each elements occupies the space that it needs for its content (it is about width). Bur vertically they occupies all parents height (if it is specified) if we don't spacify they height manually, in other cases they occupy place neccessary for its content.   */
  display: flex;

  /* in order to center all items inside flex-container VERTICALY we specify the property align-items with value center */
  /* we can set some different values: 
  - flex-start - align items to the top; 
  - flex-end - put the items to bottom
  - stretch - all items stretch to the tallest elements */
  align-items: center;

  /* we can centered items HORISONTALY inside of the flex-container */
  /* another handy values for this property:border: 
  - space-between - the remaining space disturbited between all elements;  */
  justify-content: flex-start;

  /* Best way to add gaps between elements inside flex container */
  gap: 10px;



}

/* There are cases when we need to specify gaps between items inside flex container manually. One way to do it is to define margin property flex-item itsel—é In this case we need to remove margin by last element. what can be a bit pain. To sum up, it isn't best way to solve this task.  */
/* .el {
  margin-right: 10px;
} */


.el--1 {
  /* if we want to overwrite position one certain element we use align-self property */
  align-self: flex-start;
}


.el--5 {
  align-self: stretch;
}

.el--6 {
  /* if we want to move element in the begining so we set value -1, because initial position is 0 (zero) by each element */
  /* if we want to move element to the end we set value more than 1 (one) */
  /* order: -1; */
}